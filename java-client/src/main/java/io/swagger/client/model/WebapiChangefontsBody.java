/*
 * Aspose.Pdf RestApi
 * Aspose.Pdf RestApi provides a comprehensive set of endpoints for various PDF-related tasks, enabling efficient document processing and manipulation. Users can retrieve processing status, download files, manage file locks, parse documents, redact sensitive information, convert between formats, merge files, add watermarks, perform text searches, and much more. With endpoints for tasks like electronic signing, document comparison, and form filling, the API offers extensive functionality to cater to diverse PDF requirements.
 *
 * OpenAPI spec version: v1
 * Contact: Evgeny.Pirogov@aspose.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * WebapiChangefontsBody
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-05-08T13:33:40.370683405Z[GMT]")

public class WebapiChangefontsBody {
  @SerializedName("fontReplacementsJson")
  private String fontReplacementsJson = null;

  @SerializedName("files")
  private List<File> files = null;

  public WebapiChangefontsBody fontReplacementsJson(String fontReplacementsJson) {
    this.fontReplacementsJson = fontReplacementsJson;
    return this;
  }

   /**
   * Get fontReplacementsJson
   * @return fontReplacementsJson
  **/
  @Schema(description = "")
  public String getFontReplacementsJson() {
    return fontReplacementsJson;
  }

  public void setFontReplacementsJson(String fontReplacementsJson) {
    this.fontReplacementsJson = fontReplacementsJson;
  }

  public WebapiChangefontsBody files(List<File> files) {
    this.files = files;
    return this;
  }

  public WebapiChangefontsBody addFilesItem(File filesItem) {
    if (this.files == null) {
      this.files = new ArrayList<File>();
    }
    this.files.add(filesItem);
    return this;
  }

   /**
   * Get files
   * @return files
  **/
  @Schema(description = "")
  public List<File> getFiles() {
    return files;
  }

  public void setFiles(List<File> files) {
    this.files = files;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WebapiChangefontsBody webapiChangefontsBody = (WebapiChangefontsBody) o;
    return Objects.equals(this.fontReplacementsJson, webapiChangefontsBody.fontReplacementsJson) &&
        Objects.equals(this.files, webapiChangefontsBody.files);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fontReplacementsJson, files);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WebapiChangefontsBody {\n");
    
    sb.append("    fontReplacementsJson: ").append(toIndentedString(fontReplacementsJson)).append("\n");
    sb.append("    files: ").append(toIndentedString(files)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
