<?php
/**
 * ApiApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Aspose.Pdf RestApi
 *
 * Demo 1
 *
 * OpenAPI spec version: v1
 * Contact: Evgeny.Pirogov@aspose.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.54
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Swagger\Client;

use Swagger\Client\Configuration;
use Swagger\Client\ApiException;
use Swagger\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * ApiApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ApiApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for pdfWebapiAddnumberPost
     *
     * Adds page numbers to the provided documents with the specified alignment, starting number, and format..
     *
     */
    public function testPdfWebapiAddnumberPostForm()
    {
    }

    /**
     * Test case for pdfWebapiBinaryComparisonPost
     *
     * Performs a binary comparison on the provided files..
     *
     */
    public function testPdfWebapiBinaryComparisonPostForm()
    {
    }

    /**
     * Test case for pdfWebapiChatpdfPost
     *
     * Generates a PDF document based on the provided files and question..
     *
     */
    public function testPdfWebapiChatpdfPostForm()
    {
    }

    /**
     * Test case for pdfWebapiComparisonPost
     *
     * Compare provided files and create document with marked changes..
     *
     */
    public function testPdfWebapiComparisonPostForm()
    {
    }

    /**
     * Test case for pdfWebapiCompressPost
     *
     * Compresses the provided files using the specified compression level..
     *
     */
    public function testPdfWebapiCompressPostForm()
    {
    }

    /**
     * Test case for pdfWebapiConvertPost
     *
     * Converts the provided files from one format to another, with options for XML conversion and font size adjustment..
     *
     */
    public function testPdfWebapiConvertPostForm()
    {
    }

    /**
     * Test case for pdfWebapiConvertWebpagePost
     *
     * Converts a web page to the specified output format..
     *
     */
    public function testPdfWebapiConvertWebpagePostForm()
    {
    }

    /**
     * Test case for pdfWebapiCropPost
     *
     * Crops the provided files to the specified dimensions..
     *
     */
    public function testPdfWebapiCropPostForm()
    {
    }

    /**
     * Test case for pdfWebapiDownloadIdGet
     *
     * Downloads a file..
     *
     */
    public function testPdfWebapiDownloadIdGet()
    {
    }

    /**
     * Test case for pdfWebapiDownloadStreamIdPost
     *
     * Downloads a file as a stream..
     *
     */
    public function testPdfWebapiDownloadStreamIdPost()
    {
    }

    /**
     * Test case for pdfWebapiEsignPost
     *
     * Electronically signs the provided files with the specified certificate and its password..
     *
     */
    public function testPdfWebapiEsignPostForm()
    {
    }

    /**
     * Test case for pdfWebapiExtractPost
     *
     * Extracts tables from the provided documents and converts them to the specified output format..
     *
     */
    public function testPdfWebapiExtractPostForm()
    {
    }

    /**
     * Test case for pdfWebapiFormFillerPost
     *
     * Fills a form with the provided files..
     *
     */
    public function testPdfWebapiFormFillerPostForm()
    {
    }

    /**
     * Test case for pdfWebapiGifPost
     *
     * Creates a GIF from the provided images..
     *
     */
    public function testPdfWebapiGifPost()
    {
    }

    /**
     * Test case for pdfWebapiHashPost
     *
     * Hashes the provided files using the specified algorithm..
     *
     */
    public function testPdfWebapiHashPostForm()
    {
    }

    /**
     * Test case for pdfWebapiLockPost
     *
     * Locks a document with the provided password and optional files..
     *
     */
    public function testPdfWebapiLockPostForm()
    {
    }

    /**
     * Test case for pdfWebapiMergePost
     *
     * Merges the provided files into a single document or image, with options for orientation and page size..
     *
     */
    public function testPdfWebapiMergePostForm()
    {
    }

    /**
     * Test case for pdfWebapiMetadataPost
     *
     * Performs metadata operations on the provided files..
     *
     */
    public function testPdfWebapiMetadataPostForm()
    {
    }

    /**
     * Test case for pdfWebapiMusicVideoPost
     *
     * Creates a music video from the provided files..
     *
     */
    public function testPdfWebapiMusicVideoPostForm()
    {
    }

    /**
     * Test case for pdfWebapiOrganizePost
     *
     * Organizes the provided documents by removing or moving specified pages..
     *
     */
    public function testPdfWebapiOrganizePostForm()
    {
    }

    /**
     * Test case for pdfWebapiParsePost
     *
     * Parses the provided files using a parser service..
     *
     */
    public function testPdfWebapiParsePostForm()
    {
    }

    /**
     * Test case for pdfWebapiRedactPost
     *
     * Redacts specified text from the provided documents, with options to search case-sensitively, target in text, comments, and metadata..
     *
     */
    public function testPdfWebapiRedactPostForm()
    {
    }

    /**
     * Test case for pdfWebapiRemoveIdPost
     *
     * Removes all files from processing..
     *
     */
    public function testPdfWebapiRemoveIdPost()
    {
    }

    /**
     * Test case for pdfWebapiRemovePost
     *
     * Removes annotations from the provided documents..
     *
     */
    public function testPdfWebapiRemovePostForm()
    {
    }

    /**
     * Test case for pdfWebapiRemoveWatermarkPost
     *
     * Removes a watermark from the provided files..
     *
     */
    public function testPdfWebapiRemoveWatermarkPostForm()
    {
    }

    /**
     * Test case for pdfWebapiRemovepagesPost
     *
     * Removes specified pages from the provided files..
     *
     */
    public function testPdfWebapiRemovepagesPostForm()
    {
    }

    /**
     * Test case for pdfWebapiRepairPost
     *
     * Repairs the provided files..
     *
     */
    public function testPdfWebapiRepairPostForm()
    {
    }

    /**
     * Test case for pdfWebapiResizePost
     *
     * Resizes the provided files to the specified dimensions or using a preset size..
     *
     */
    public function testPdfWebapiResizePostForm()
    {
    }

    /**
     * Test case for pdfWebapiRotatePost
     *
     * Rotates the provided files by a specified angle, with options for rotation type and page number..
     *
     */
    public function testPdfWebapiRotatePostForm()
    {
    }

    /**
     * Test case for pdfWebapiSearchPost
     *
     * Searches the provided files for the specified query and makr found text with yellow background..
     *
     */
    public function testPdfWebapiSearchPostForm()
    {
    }

    /**
     * Test case for pdfWebapiSearchablePost
     *
     * Converts the provided files into a searchable PDF format for the specified language..
     *
     */
    public function testPdfWebapiSearchablePostForm()
    {
    }

    /**
     * Test case for pdfWebapiSignaturePost
     *
     * Adds a signature to the provided files..
     *
     */
    public function testPdfWebapiSignaturePostForm()
    {
    }

    /**
     * Test case for pdfWebapiSplitdocPost
     *
     * Splits the provided documents based on the specified split type and page rage to spit..
     *
     */
    public function testPdfWebapiSplitdocPostForm()
    {
    }

    /**
     * Test case for pdfWebapiSplitimagePost
     *
     * Splits the provided images into smaller parts based on the specified parameters..
     *
     */
    public function testPdfWebapiSplitimagePostForm()
    {
    }

    /**
     * Test case for pdfWebapiStatusIdPost
     *
     * Retrieves the status of a processing..
     *
     */
    public function testPdfWebapiStatusIdPost()
    {
    }

    /**
     * Test case for pdfWebapiUnlockPost
     *
     * Attempts to unlock a document with an password and associated files..
     *
     */
    public function testPdfWebapiUnlockPostForm()
    {
    }

    /**
     * Test case for pdfWebapiVerifyEsignPost
     *
     * Verifies the electronic signature of the provided files..
     *
     */
    public function testPdfWebapiVerifyEsignPostForm()
    {
    }

    /**
     * Test case for pdfWebapiWatermarkPost
     *
     * Adds a watermark to the provided files..
     *
     */
    public function testPdfWebapiWatermarkPostForm()
    {
    }

    /**
     * Test case for pdfWebapiWordCounterPost
     *
     * Counts the words in the provided files within the specified page range..
     *
     */
    public function testPdfWebapiWordCounterPostForm()
    {
    }

    /**
     * Test case for pdfWebapiXfaconvertPost
     *
     * Converts the provided documents from XFA format to a different format..
     *
     */
    public function testPdfWebapiXfaconvertPostForm()
    {
    }
}
